"""create users table with UUID and async support

Revision ID: c779d8204e95
Revises:
Create Date: 2025-07-17 17:19:40.288736

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c779d8204e95"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False, comment="ID único del usuario"),
        sa.Column(
            "email",
            sa.String(length=255),
            nullable=False,
            comment="Email único del usuario",
        ),
        sa.Column(
            "password_hash",
            sa.String(length=255),
            nullable=False,
            comment="Hash seguro de la contraseña",
        ),
        sa.Column(
            "nombre",
            sa.String(length=100),
            nullable=False,
            comment="Nombre del usuario",
        ),
        sa.Column(
            "apellido",
            sa.String(length=100),
            nullable=False,
            comment="Apellido del usuario",
        ),
        sa.Column(
            "user_type",
            sa.Enum("SUPERUSER", "ADMIN", "VENDEDOR", "COMPRADOR", name="usertype"),
            nullable=False,
            comment="Tipo de usuario en el sistema",
        ),
        sa.Column(
            "is_active",
            sa.Boolean(),
            nullable=False,
            comment="Usuario activo en el sistema",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
            comment="Fecha de creación",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
            comment="Fecha de última actualización",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
