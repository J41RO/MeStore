"""Initial SQLite migration - complete tables

Revision ID: c58467fecce8
Revises: 
Create Date: 2025-09-17 19:17:20.786940+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c58467fecce8'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_permissions',
    sa.Column('id', sa.String(length=36), nullable=False, comment='Unique permission identifier'),
    sa.Column('name', sa.String(length=100), nullable=False, comment="Unique permission name (e.g., 'users.create.global')"),
    sa.Column('display_name', sa.String(length=200), nullable=False, comment='Human-readable permission name'),
    sa.Column('description', sa.Text(), nullable=True, comment='Detailed description of what this permission allows'),
    sa.Column('resource_type', sa.Enum('USERS', 'VENDORS', 'ORDERS', 'PRODUCTS', 'INVENTORY', 'TRANSACTIONS', 'COMMISSIONS', 'REPORTS', 'SETTINGS', 'AUDIT_LOGS', 'NOTIFICATIONS', 'PAYMENTS', 'STORAGE', 'ANALYTICS', name='resourcetype'), nullable=False, comment='Resource type this permission applies to'),
    sa.Column('action', sa.Enum('CREATE', 'READ', 'UPDATE', 'DELETE', 'APPROVE', 'REJECT', 'MANAGE', 'AUDIT', 'EXPORT', 'IMPORT', 'CONFIGURE', 'MONITOR', name='permissionaction'), nullable=False, comment='Action this permission allows'),
    sa.Column('scope', sa.Enum('SYSTEM', 'GLOBAL', 'DEPARTMENT', 'TEAM', 'USER', 'READ_ONLY', name='permissionscope'), nullable=False, comment='Operational scope of this permission'),
    sa.Column('required_clearance_level', sa.Integer(), nullable=False, comment='Minimum security clearance level required (1-5)'),
    sa.Column('requires_mfa', sa.Boolean(), nullable=False, comment='Whether this permission requires MFA verification'),
    sa.Column('requires_approval', sa.Boolean(), nullable=False, comment='Whether actions with this permission require additional approval'),
    sa.Column('is_system_permission', sa.Boolean(), nullable=False, comment='Whether this is a critical system permission'),
    sa.Column('is_inheritable', sa.Boolean(), nullable=False, comment='Whether this permission can be inherited through role hierarchy'),
    sa.Column('is_delegatable', sa.Boolean(), nullable=False, comment='Whether this permission can be delegated to other admins'),
    sa.Column('conditions', sa.JSON(), nullable=True, comment='Additional conditions for permission validation (JSON format)'),
    sa.Column('restrictions', sa.JSON(), nullable=True, comment='Restrictions on permission usage (time-based, IP-based, etc.)'),
    sa.Column('category', sa.String(length=50), nullable=True, comment='Permission category for grouping and organization'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='Tags for permission classification and filtering'),
    sa.Column('risk_level', sa.String(length=20), nullable=False, comment='Risk level: LOW, MEDIUM, HIGH, CRITICAL'),
    sa.Column('compliance_requirements', sa.JSON(), nullable=True, comment='Compliance requirements this permission must meet'),
    sa.Column('audit_required', sa.Boolean(), nullable=False, comment='Whether usage of this permission must be audited'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('resource_type', 'action', 'scope', name='uq_permission_definition')
    )
    op.create_index('ix_admin_permission_category', 'admin_permissions', ['category'], unique=False)
    op.create_index('ix_admin_permission_resource_action', 'admin_permissions', ['resource_type', 'action'], unique=False)
    op.create_index('ix_admin_permission_scope_clearance', 'admin_permissions', ['scope', 'required_clearance_level'], unique=False)
    op.create_index('ix_admin_permission_system_critical', 'admin_permissions', ['is_system_permission', 'risk_level'], unique=False)
    op.create_index(op.f('ix_admin_permissions_id'), 'admin_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_admin_permissions_name'), 'admin_permissions', ['name'], unique=True)
    op.create_table('categories',
    sa.Column('name', sa.String(length=200), nullable=False, comment='Nombre de la categoría'),
    sa.Column('slug', sa.String(length=200), nullable=False, comment='URL-friendly identifier único'),
    sa.Column('description', sa.Text(), nullable=True, comment='Descripción detallada de la categoría'),
    sa.Column('parent_id', sa.String(length=36), nullable=True, comment='ID de la categoría padre (NULL para root categories)'),
    sa.Column('path', sa.String(length=1000), nullable=False, comment="Materialized path del árbol (e.g., '/electronics/phones/')"),
    sa.Column('level', sa.Integer(), nullable=False, comment='Nivel en el árbol de categorías (0 = root)'),
    sa.Column('sort_order', sa.Integer(), nullable=False, comment='Orden de display dentro del nivel'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Estado activo de la categoría'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='Estado detallado de la categoría'),
    sa.Column('meta_title', sa.String(length=255), nullable=True, comment='Título SEO de la categoría'),
    sa.Column('meta_description', sa.String(length=500), nullable=True, comment='Descripción SEO de la categoría'),
    sa.Column('meta_keywords', sa.Text(), nullable=True, comment='Keywords SEO separadas por comas'),
    sa.Column('icon_url', sa.String(length=500), nullable=True, comment='URL del ícono de la categoría'),
    sa.Column('banner_url', sa.String(length=500), nullable=True, comment='URL del banner de la categoría'),
    sa.Column('display_config', sa.Text(), nullable=True, comment='Configuración JSON serializada para display frontend'),
    sa.Column('product_count', sa.Integer(), nullable=False, comment='Contador de productos en esta categoría'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['parent_id'], ['categories.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug', name='uq_category_slug')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_is_active'), 'categories', ['is_active'], unique=False)
    op.create_index(op.f('ix_categories_level'), 'categories', ['level'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=False)
    op.create_index(op.f('ix_categories_parent_id'), 'categories', ['parent_id'], unique=False)
    op.create_index(op.f('ix_categories_path'), 'categories', ['path'], unique=False)
    op.create_index(op.f('ix_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_index(op.f('ix_categories_sort_order'), 'categories', ['sort_order'], unique=False)
    op.create_index(op.f('ix_categories_status'), 'categories', ['status'], unique=False)
    op.create_index('ix_category_active_sort', 'categories', ['is_active', 'sort_order'], unique=False)
    op.create_index('ix_category_active_status', 'categories', ['is_active', 'status'], unique=False)
    op.create_index('ix_category_name_active', 'categories', ['name', 'is_active'], unique=False)
    op.create_index('ix_category_parent_active_sort', 'categories', ['parent_id', 'is_active', 'sort_order'], unique=False)
    op.create_index('ix_category_parent_level', 'categories', ['parent_id', 'level'], unique=False)
    op.create_index('ix_category_parent_sort', 'categories', ['parent_id', 'sort_order'], unique=False)
    op.create_index('ix_category_path_level', 'categories', ['path', 'level'], unique=False)
    op.create_table('system_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=255), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('data_type', sa.String(length=20), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('default_value', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_editable', sa.Boolean(), nullable=True),
    sa.Column('last_modified_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_system_settings_category', 'system_settings', ['category'], unique=False)
    op.create_index('idx_system_settings_editable', 'system_settings', ['is_editable'], unique=False)
    op.create_index('idx_system_settings_public', 'system_settings', ['is_public'], unique=False)
    op.create_index(op.f('ix_system_settings_category'), 'system_settings', ['category'], unique=False)
    op.create_index(op.f('ix_system_settings_id'), 'system_settings', ['id'], unique=False)
    op.create_index(op.f('ix_system_settings_key'), 'system_settings', ['key'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False, comment='Identificador único UUID del usuario'),
    sa.Column('banco', sa.String(length=100), nullable=True, comment='Nombre del banco para transferencias (opcional)'),
    sa.Column('tipo_cuenta', sa.String(length=20), nullable=True, comment='Tipo de cuenta: AHORROS o CORRIENTE (opcional)'),
    sa.Column('numero_cuenta', sa.String(length=50), nullable=True, comment='Número de cuenta bancaria (opcional)'),
    sa.Column('reset_token', sa.String(length=100), nullable=True, comment='Token temporal para reset de contraseña'),
    sa.Column('reset_token_expires_at', sa.DateTime(timezone=True), nullable=True, comment='Fecha y hora de expiración del token de reset'),
    sa.Column('reset_attempts', sa.Integer(), nullable=False, comment='Número de intentos de reset de contraseña'),
    sa.Column('last_reset_request', sa.DateTime(timezone=True), nullable=True, comment='Fecha y hora del último request de reset'),
    sa.Column('email', sa.String(length=255), nullable=False, comment='Email único del usuario, usado para login'),
    sa.Column('password_hash', sa.String(length=255), nullable=False, comment='Hash bcrypt de la contraseña del usuario'),
    sa.Column('nombre', sa.String(length=100), nullable=True, comment='Nombre del usuario'),
    sa.Column('apellido', sa.String(length=100), nullable=True, comment='Apellido del usuario'),
    sa.Column('user_type', sa.Enum('COMPRADOR', 'VENDEDOR', 'ADMIN', 'SUPERUSER', name='usertype'), nullable=False, comment='Tipo de usuario: comprador o vendedor'),
    sa.Column('vendor_status', sa.Enum('DRAFT', 'PENDING_DOCUMENTS', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', name='vendorstatus'), nullable=True, comment='Estado específico del proceso de onboarding de vendor'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Indica si el usuario está activo en el sistema'),
    sa.Column('is_verified', sa.Boolean(), server_default='false', nullable=False, comment='Indica si el usuario ha verificado su email'),
    sa.Column('cedula', sa.String(length=20), nullable=True, comment='Cédula de ciudadanía colombiana (opcional, única)'),
    sa.Column('telefono', sa.String(length=20), nullable=True, comment='Número de teléfono colombiano (opcional)'),
    sa.Column('ciudad', sa.String(length=100), nullable=True, comment='Ciudad de residencia en Colombia (opcional)'),
    sa.Column('empresa', sa.String(length=200), nullable=True, comment='Empresa donde trabaja el usuario (opcional)'),
    sa.Column('direccion', sa.String(length=300), nullable=True, comment='Dirección de residencia completa (opcional)'),
    sa.Column('email_verified', sa.Boolean(), nullable=False, comment='Email verificado con código OTP'),
    sa.Column('phone_verified', sa.Boolean(), nullable=False, comment='Teléfono verificado con código OTP'),
    sa.Column('otp_secret', sa.String(length=6), nullable=True, comment='Código OTP temporal (6 dígitos)'),
    sa.Column('otp_expires_at', sa.DateTime(timezone=True), nullable=True, comment='Fecha y hora de expiración del código OTP'),
    sa.Column('otp_attempts', sa.Integer(), nullable=False, comment='Número de intentos fallidos de verificación OTP'),
    sa.Column('otp_type', sa.String(length=10), nullable=True, comment='Tipo de OTP enviado: EMAIL o SMS'),
    sa.Column('last_otp_sent', sa.DateTime(timezone=True), nullable=True, comment='Fecha y hora del último envío de OTP'),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True, comment='Timestamp del último login del usuario'),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Timestamp de última actualización del registro'),
    sa.Column('avatar_url', sa.String(length=500), nullable=True, comment='URL del avatar/logo del vendor'),
    sa.Column('business_name', sa.String(length=200), nullable=True, comment='Nombre comercial del negocio'),
    sa.Column('business_description', sa.Text(), nullable=True, comment='Descripción del negocio'),
    sa.Column('website_url', sa.String(length=500), nullable=True, comment='Sitio web del vendor'),
    sa.Column('social_media_links', sa.JSON(), nullable=True, comment='Enlaces de redes sociales'),
    sa.Column('business_hours', sa.JSON(), nullable=True, comment='Horarios de atención'),
    sa.Column('shipping_policy', sa.Text(), nullable=True, comment='Política de envíos'),
    sa.Column('return_policy', sa.Text(), nullable=True, comment='Política de devoluciones'),
    sa.Column('notification_preferences', sa.JSON(), nullable=True, comment='Preferencias de notificaciones del vendor'),
    sa.Column('bank_name', sa.String(length=100), nullable=True, comment='Nombre del banco'),
    sa.Column('account_holder_name', sa.String(length=200), nullable=True, comment='Titular de la cuenta'),
    sa.Column('account_number', sa.String(length=50), nullable=True, comment='Número de cuenta'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_active_created', 'users', ['is_active', 'created_at'], unique=False)
    op.create_index('ix_user_created_type', 'users', ['created_at', 'user_type'], unique=False)
    op.create_index('ix_user_email_active', 'users', ['email', 'is_active'], unique=False)
    op.create_index('ix_user_email_verified', 'users', ['email_verified'], unique=False)
    op.create_index('ix_user_otp_expires', 'users', ['otp_expires_at'], unique=False)
    op.create_index('ix_user_type_active', 'users', ['user_type', 'is_active'], unique=False)
    op.create_index(op.f('ix_users_cedula'), 'users', ['cedula'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_reset_token'), 'users', ['reset_token'], unique=False)
    op.create_index(op.f('ix_users_reset_token_expires_at'), 'users', ['reset_token_expires_at'], unique=False)
    op.create_table('admin_activity_logs',
    sa.Column('id', sa.String(length=36), nullable=False, comment='Unique activity log identifier'),
    sa.Column('admin_user_id', sa.String(length=36), nullable=True, comment='Admin user who performed the action'),
    sa.Column('admin_email', sa.String(length=255), nullable=True, comment='Email of admin user (for audit even if user deleted)'),
    sa.Column('admin_full_name', sa.String(length=200), nullable=True, comment='Full name of admin user at time of action'),
    sa.Column('action_type', sa.Enum('AUTHENTICATION', 'USER_MANAGEMENT', 'VENDOR_MANAGEMENT', 'FINANCIAL', 'SYSTEM_CONFIG', 'DATA_EXPORT', 'SECURITY', 'AUDIT', 'MONITORING', 'EMERGENCY', name='adminactiontype'), nullable=False, comment='Type of admin action performed'),
    sa.Column('action_name', sa.String(length=100), nullable=False, comment="Specific action name (e.g., 'create_user', 'approve_vendor')"),
    sa.Column('action_description', sa.Text(), nullable=True, comment='Detailed description of the action performed'),
    sa.Column('target_type', sa.String(length=50), nullable=True, comment='Type of target object (user, vendor, order, etc.)'),
    sa.Column('target_id', sa.String(length=100), nullable=True, comment='ID of the target object'),
    sa.Column('target_identifier', sa.String(length=200), nullable=True, comment='Human-readable identifier of target (email, name, etc.)'),
    sa.Column('result', sa.Enum('SUCCESS', 'FAILURE', 'PARTIAL', 'BLOCKED', 'PENDING', 'CANCELLED', 'TIMEOUT', name='actionresult'), nullable=False, comment='Result of the action'),
    sa.Column('risk_level', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', 'EMERGENCY', name='risklevel'), nullable=False, comment='Risk level of the action'),
    sa.Column('endpoint', sa.String(length=200), nullable=True, comment='API endpoint that was called'),
    sa.Column('http_method', sa.String(length=10), nullable=True, comment='HTTP method used (GET, POST, PUT, DELETE, etc.)'),
    sa.Column('request_data', sa.JSON(), nullable=True, comment='Request data/payload (sensitive data filtered)'),
    sa.Column('response_data', sa.JSON(), nullable=True, comment='Response data (sensitive data filtered)'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='IP address of the admin user'),
    sa.Column('user_agent', sa.Text(), nullable=True, comment='User agent string of the client'),
    sa.Column('session_id', sa.String(length=100), nullable=True, comment='Session ID for correlation'),
    sa.Column('device_fingerprint', sa.String(length=255), nullable=True, comment='Device fingerprint for security tracking'),
    sa.Column('country_code', sa.String(length=2), nullable=True, comment='Country code derived from IP address'),
    sa.Column('region', sa.String(length=100), nullable=True, comment='Geographic region'),
    sa.Column('city', sa.String(length=100), nullable=True, comment='Geographic city'),
    sa.Column('timezone', sa.String(length=50), nullable=True, comment='User timezone'),
    sa.Column('execution_time_ms', sa.Float(), nullable=True, comment='Action execution time in milliseconds'),
    sa.Column('cpu_usage_percent', sa.Float(), nullable=True, comment='CPU usage during action execution'),
    sa.Column('memory_usage_mb', sa.Float(), nullable=True, comment='Memory usage during action execution'),
    sa.Column('error_code', sa.String(length=50), nullable=True, comment='Error code if action failed'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='Error message if action failed'),
    sa.Column('error_stack_trace', sa.Text(), nullable=True, comment='Stack trace for debugging (filtered for security)'),
    sa.Column('requires_review', sa.Boolean(), nullable=False, comment='Whether this action requires manual review'),
    sa.Column('is_suspicious', sa.Boolean(), nullable=False, comment='Whether this action was flagged as suspicious'),
    sa.Column('compliance_tags', sa.JSON(), nullable=True, comment='Compliance-related tags and metadata'),
    sa.Column('retention_policy', sa.String(length=50), nullable=False, comment='Data retention policy (STANDARD, LONG_TERM, PERMANENT)'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='Additional tags for categorization and filtering'),
    sa.Column('custom_fields', sa.JSON(), nullable=True, comment='Custom fields for specific admin actions'),
    sa.Column('correlation_id', sa.String(length=100), nullable=True, comment='Correlation ID for tracking related actions'),
    sa.Column('alert_sent', sa.Boolean(), nullable=False, comment='Whether security alert was sent for this action'),
    sa.Column('alert_level', sa.String(length=20), nullable=True, comment='Level of alert sent (INFO, WARNING, CRITICAL)'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['admin_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_activity_logs_action_name'), 'admin_activity_logs', ['action_name'], unique=False)
    op.create_index('ix_admin_activity_logs_action_result', 'admin_activity_logs', ['action_type', 'result'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_action_type'), 'admin_activity_logs', ['action_type'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_admin_email'), 'admin_activity_logs', ['admin_email'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_admin_user_id'), 'admin_activity_logs', ['admin_user_id'], unique=False)
    op.create_index('ix_admin_activity_logs_compliance', 'admin_activity_logs', ['requires_review', 'risk_level'], unique=False)
    op.create_index('ix_admin_activity_logs_correlation', 'admin_activity_logs', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_correlation_id'), 'admin_activity_logs', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_id'), 'admin_activity_logs', ['id'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_ip_address'), 'admin_activity_logs', ['ip_address'], unique=False)
    op.create_index('ix_admin_activity_logs_ip_time', 'admin_activity_logs', ['ip_address', 'created_at'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_is_suspicious'), 'admin_activity_logs', ['is_suspicious'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_result'), 'admin_activity_logs', ['result'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_risk_level'), 'admin_activity_logs', ['risk_level'], unique=False)
    op.create_index('ix_admin_activity_logs_risk_time', 'admin_activity_logs', ['risk_level', 'created_at'], unique=False)
    op.create_index('ix_admin_activity_logs_session', 'admin_activity_logs', ['session_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_session_id'), 'admin_activity_logs', ['session_id'], unique=False)
    op.create_index('ix_admin_activity_logs_suspicious', 'admin_activity_logs', ['is_suspicious', 'created_at'], unique=False)
    op.create_index('ix_admin_activity_logs_target', 'admin_activity_logs', ['target_type', 'target_id'], unique=False)
    op.create_index(op.f('ix_admin_activity_logs_target_id'), 'admin_activity_logs', ['target_id'], unique=False)
    op.create_index('ix_admin_activity_logs_user_time', 'admin_activity_logs', ['admin_user_id', 'created_at'], unique=False)
    op.create_table('admin_user_permissions',
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('permission_id', sa.String(length=36), nullable=False),
    sa.Column('granted_by_id', sa.String(length=36), nullable=True),
    sa.Column('granted_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['granted_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['permission_id'], ['admin_permissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'permission_id')
    )
    op.create_index('ix_admin_user_permissions_granted_at', 'admin_user_permissions', ['granted_at'], unique=False)
    op.create_index('ix_admin_user_permissions_user_active', 'admin_user_permissions', ['user_id', 'is_active'], unique=False)
    op.create_table('inventory_audits',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('nombre', sa.String(length=200), nullable=False),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('INICIADA', 'EN_PROCESO', 'COMPLETADA', 'RECONCILIADA', name='auditstatus'), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('fecha_fin', sa.DateTime(timezone=True), nullable=True),
    sa.Column('auditor_id', sa.String(length=36), nullable=False),
    sa.Column('audit_type', sa.String(length=50), nullable=True),
    sa.Column('discrepancies_found', sa.Integer(), nullable=True),
    sa.Column('total_items_auditados', sa.Integer(), nullable=True),
    sa.Column('discrepancias_encontradas', sa.Integer(), nullable=True),
    sa.Column('valor_discrepancias', sa.Float(), nullable=True),
    sa.Column('notas', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['auditor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=50), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=False),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('tax_amount', sa.Float(), nullable=False),
    sa.Column('shipping_cost', sa.Float(), nullable=False),
    sa.Column('discount_amount', sa.Float(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'PROCESSING', 'SHIPPED', 'DELIVERED', 'CANCELLED', 'REFUNDED', name='orderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('shipped_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('shipping_name', sa.String(length=200), nullable=False),
    sa.Column('shipping_phone', sa.String(length=20), nullable=False),
    sa.Column('shipping_email', sa.String(length=255), nullable=True),
    sa.Column('shipping_address', sa.Text(), nullable=False),
    sa.Column('shipping_city', sa.String(length=100), nullable=False),
    sa.Column('shipping_state', sa.String(length=100), nullable=False),
    sa.Column('shipping_postal_code', sa.String(length=20), nullable=True),
    sa.Column('shipping_country', sa.String(length=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_order_number'), 'orders', ['order_number'], unique=True)
    op.create_table('payment_methods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=False),
    sa.Column('method_type', sa.String(length=50), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('card_brand', sa.String(length=50), nullable=True),
    sa.Column('card_last_four', sa.String(length=4), nullable=True),
    sa.Column('card_exp_month', sa.String(length=2), nullable=True),
    sa.Column('card_exp_year', sa.String(length=4), nullable=True),
    sa.Column('card_holder_name', sa.String(length=200), nullable=True),
    sa.Column('pse_bank_code', sa.String(length=10), nullable=True),
    sa.Column('pse_bank_name', sa.String(length=200), nullable=True),
    sa.Column('pse_user_type', sa.String(length=20), nullable=True),
    sa.Column('pse_user_dni', sa.String(length=50), nullable=True),
    sa.Column('gateway_token', sa.String(length=500), nullable=True),
    sa.Column('gateway_customer_id', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_methods_id'), 'payment_methods', ['id'], unique=False)
    op.create_table('payout_requests',
    sa.Column('vendedor_id', sa.String(length=36), nullable=False),
    sa.Column('monto_solicitado', sa.DECIMAL(precision=12, scale=2), nullable=False),
    sa.Column('estado', sa.Enum('SOLICITADO', 'PROCESANDO', 'PAGADO', 'RECHAZADO', name='estadopayout'), nullable=True),
    sa.Column('tipo_cuenta', sa.String(length=20), nullable=False),
    sa.Column('numero_cuenta', sa.String(length=50), nullable=False),
    sa.Column('banco', sa.String(length=100), nullable=False),
    sa.Column('observaciones', sa.String(length=500), nullable=True),
    sa.Column('fecha_procesamiento', sa.DateTime(), nullable=True),
    sa.Column('referencia_pago', sa.String(length=100), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['vendedor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payout_requests_id'), 'payout_requests', ['id'], unique=False)
    op.create_table('products',
    sa.Column('sku', sa.String(length=50), nullable=False, comment='Código único del producto para identificación'),
    sa.Column('vendedor_id', sa.String(length=36), nullable=True, comment='ID del usuario vendedor que registró el producto'),
    sa.Column('created_by_id', sa.String(length=36), nullable=True, comment='ID del usuario que creó el producto'),
    sa.Column('updated_by_id', sa.String(length=36), nullable=True, comment='ID del usuario que actualizó por última vez'),
    sa.Column('version', sa.Integer(), nullable=False, comment='Versión del producto para control de cambios'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='Nombre del producto para búsquedas'),
    sa.Column('description', sa.Text(), nullable=True, comment='Descripción detallada del producto'),
    sa.Column('status', sa.Enum('TRANSITO', 'VERIFICADO', 'DISPONIBLE', 'VENDIDO', name='productstatus'), nullable=False, comment='Estado actual del producto en el marketplace'),
    sa.Column('precio_venta', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Precio de venta al público (COP)'),
    sa.Column('precio_costo', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Precio de costo/compra del producto (COP)'),
    sa.Column('comision_mestocker', sa.DECIMAL(precision=10, scale=2), nullable=True, comment='Comisión de MeStore por venta del producto (COP)'),
    sa.Column('peso', sa.DECIMAL(precision=8, scale=3), nullable=True, comment='Peso del producto en kilogramos'),
    sa.Column('dimensiones', sa.Text(), nullable=True, comment='Dimensiones del producto: {largo, ancho, alto} en cm - JSON serializado'),
    sa.Column('categoria', sa.String(length=100), nullable=True, comment='Categoría del producto para organización'),
    sa.Column('tags', sa.Text(), nullable=True, comment='Tags del producto como array JSON serializado para búsquedas'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vendedor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_product_created_at', 'products', ['created_at'], unique=False)
    op.create_index('ix_product_name_sku', 'products', ['name', 'sku'], unique=False)
    op.create_index('ix_product_status_created', 'products', ['status', 'created_at'], unique=False)
    op.create_index('ix_product_vendedor_status', 'products', ['vendedor_id', 'status'], unique=False)
    op.create_index('ix_product_vendedor_status_created', 'products', ['vendedor_id', 'status', 'created_at'], unique=False)
    op.create_index(op.f('ix_products_categoria'), 'products', ['categoria'], unique=False)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_index(op.f('ix_products_name'), 'products', ['name'], unique=False)
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.create_index(op.f('ix_products_vendedor_id'), 'products', ['vendedor_id'], unique=False)
    op.create_table('storages',
    sa.Column('tipo', sa.Enum('PEQUENO', 'MEDIANO', 'GRANDE', 'ESPECIAL', name='storagetype'), nullable=False, comment='Tipo de espacio de almacenamiento'),
    sa.Column('capacidad_max', sa.Integer(), nullable=False, comment='Capacidad máxima en número de productos'),
    sa.Column('vendedor_id', sa.String(length=36), nullable=True, comment='ID del usuario vendedor propietario del espacio'),
    sa.Column('productos_actuales', sa.Integer(), nullable=False, comment='Número actual de productos almacenados'),
    sa.Column('ocupacion_actual', sa.DECIMAL(precision=5, scale=2), nullable=False, comment='Porcentaje actual de ocupación (0.00 a 100.00)'),
    sa.Column('ultima_actualizacion', sa.DateTime(), nullable=True, comment='Fecha de última actualización del tracking'),
    sa.Column('tarifa_mensual', sa.DECIMAL(precision=12, scale=2), nullable=True, comment='Tarifa mensual del espacio de almacenamiento (COP)'),
    sa.Column('tarifa_por_producto', sa.DECIMAL(precision=12, scale=2), nullable=True, comment='Tarifa por producto almacenado (COP)'),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True, comment='Fecha de inicio del contrato de almacenamiento'),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True, comment='Fecha de finalización del contrato de almacenamiento'),
    sa.Column('renovacion_automatica', sa.Boolean(), nullable=False, comment='Indica si el contrato se renueva automáticamente'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.CheckConstraint('capacidad_max > 0', name='ck_storage_capacidad_positive'),
    sa.CheckConstraint('fecha_fin IS NULL OR fecha_inicio IS NULL OR fecha_fin > fecha_inicio', name='ck_storage_fechas_validas'),
    sa.CheckConstraint('ocupacion_actual >= 0 AND ocupacion_actual <= 100', name='ck_storage_ocupacion_valid'),
    sa.CheckConstraint('productos_actuales >= 0', name='ck_storage_productos_actuales_positive'),
    sa.CheckConstraint('tarifa_mensual >= 0', name='ck_storage_tarifa_mensual_positive'),
    sa.CheckConstraint('tarifa_por_producto >= 0', name='ck_storage_tarifa_por_producto_positive'),
    sa.ForeignKeyConstraint(['vendedor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_storage_tipo_capacidad', 'storages', ['tipo', 'capacidad_max'], unique=False)
    op.create_index('ix_storage_tipo_vendedor', 'storages', ['tipo', 'vendedor_id'], unique=False)
    op.create_index('ix_storage_vendedor_created', 'storages', ['vendedor_id', 'created_at'], unique=False)
    op.create_index('ix_storage_vendedor_tipo', 'storages', ['vendedor_id', 'tipo'], unique=False)
    op.create_index(op.f('ix_storages_id'), 'storages', ['id'], unique=False)
    op.create_index(op.f('ix_storages_tipo'), 'storages', ['tipo'], unique=False)
    op.create_index(op.f('ix_storages_vendedor_id'), 'storages', ['vendedor_id'], unique=False)
    op.create_table('vendor_audit_logs',
    sa.Column('vendor_id', sa.String(length=36), nullable=False, comment='ID del vendedor afectado'),
    sa.Column('admin_id', sa.String(length=36), nullable=False, comment='ID del administrador que realizó la acción'),
    sa.Column('action_type', sa.Enum('APPROVED', 'REJECTED', 'SUSPENDED', 'ACTIVATED', 'PROFILE_UPDATED', 'NOTE_ADDED', 'STATUS_CHANGED', 'BULK_ACTION', name='actiontype'), nullable=False, comment='Tipo de acción realizada'),
    sa.Column('old_values', sa.JSON(), nullable=True, comment='Valores anteriores en formato JSON'),
    sa.Column('new_values', sa.JSON(), nullable=True, comment='Valores nuevos en formato JSON'),
    sa.Column('description', sa.Text(), nullable=True, comment='Descripción adicional de la acción'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vendor_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_vendor_audit_action_created', 'vendor_audit_logs', ['action_type', 'created_at'], unique=False)
    op.create_index('ix_vendor_audit_admin_created', 'vendor_audit_logs', ['admin_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_vendor_audit_logs_action_type'), 'vendor_audit_logs', ['action_type'], unique=False)
    op.create_index(op.f('ix_vendor_audit_logs_admin_id'), 'vendor_audit_logs', ['admin_id'], unique=False)
    op.create_index(op.f('ix_vendor_audit_logs_id'), 'vendor_audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_vendor_audit_logs_vendor_id'), 'vendor_audit_logs', ['vendor_id'], unique=False)
    op.create_index('ix_vendor_audit_vendor_created', 'vendor_audit_logs', ['vendor_id', 'created_at'], unique=False)
    op.create_table('vendor_documents',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('vendor_id', sa.String(length=36), nullable=False),
    sa.Column('document_type', sa.Enum('CEDULA', 'RUT', 'CERTIFICADO_BANCARIO', 'CAMARA_COMERCIO', name='documenttype'), nullable=False),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'VERIFIED', 'REJECTED', name='documentstatus'), nullable=False),
    sa.Column('verified_by', sa.String(length=36), nullable=True),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['vendor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['verified_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vendor_documents_id'), 'vendor_documents', ['id'], unique=False)
    op.create_table('vendor_notes',
    sa.Column('vendor_id', sa.String(length=36), nullable=False, comment='ID del vendedor sobre el que se hace la nota'),
    sa.Column('admin_id', sa.String(length=36), nullable=False, comment='ID del administrador que crea la nota'),
    sa.Column('note_text', sa.Text(), nullable=False, comment='Contenido de la nota interna'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vendor_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_vendor_notes_admin_created', 'vendor_notes', ['admin_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_vendor_notes_admin_id'), 'vendor_notes', ['admin_id'], unique=False)
    op.create_index(op.f('ix_vendor_notes_id'), 'vendor_notes', ['id'], unique=False)
    op.create_index('ix_vendor_notes_vendor_created', 'vendor_notes', ['vendor_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_vendor_notes_vendor_id'), 'vendor_notes', ['vendor_id'], unique=False)
    op.create_table('discrepancy_reports',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('audit_id', sa.String(length=36), nullable=False, comment='ID de la auditoría de inventario asociada'),
    sa.Column('report_type', sa.Enum('DISCREPANCIES', 'ADJUSTMENTS', 'ACCURACY', 'FINANCIAL_IMPACT', 'LOCATION_ANALYSIS', 'CATEGORY_ANALYSIS', 'TREND_ANALYSIS', 'COMPREHENSIVE', name='reporttype'), nullable=False, comment='Tipo de reporte de discrepancias'),
    sa.Column('report_name', sa.String(length=200), nullable=False, comment='Nombre descriptivo del reporte'),
    sa.Column('description', sa.Text(), nullable=True, comment='Descripción detallada del reporte'),
    sa.Column('generated_by_id', sa.String(length=36), nullable=False, comment='Usuario que generó el reporte'),
    sa.Column('generated_by_name', sa.String(length=100), nullable=False, comment='Nombre del usuario (snapshot)'),
    sa.Column('date_range_start', sa.DateTime(timezone=True), nullable=False, comment='Fecha de inicio del análisis'),
    sa.Column('date_range_end', sa.DateTime(timezone=True), nullable=False, comment='Fecha de fin del análisis'),
    sa.Column('total_discrepancies', sa.Integer(), nullable=True, comment='Total de discrepancias encontradas'),
    sa.Column('total_adjustments', sa.Integer(), nullable=True, comment='Total de ajustes realizados'),
    sa.Column('financial_impact', sa.Float(), nullable=True, comment='Impacto financiero total de discrepancias'),
    sa.Column('accuracy_percentage', sa.Float(), nullable=True, comment='Porcentaje de precisión del inventario'),
    sa.Column('items_analyzed', sa.Integer(), nullable=True, comment='Total de items analizados'),
    sa.Column('file_path', sa.String(length=500), nullable=True, comment='Ruta del archivo generado'),
    sa.Column('file_format', sa.Enum('PDF', 'EXCEL', 'CSV', 'JSON', name='exportformat'), nullable=False, comment='Formato del archivo exportado'),
    sa.Column('file_size', sa.Integer(), nullable=True, comment='Tamaño del archivo en bytes'),
    sa.Column('status', sa.Enum('GENERATING', 'COMPLETED', 'FAILED', 'EXPIRED', name='reportstatus'), nullable=False, comment='Estado actual del reporte'),
    sa.Column('analysis_data', sa.JSON(), nullable=True, comment='Datos detallados del análisis (JSON)'),
    sa.Column('report_config', sa.JSON(), nullable=True, comment='Configuración utilizada para generar el reporte'),
    sa.Column('generation_time_seconds', sa.Float(), nullable=True, comment='Tiempo de generación en segundos'),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True, comment='Fecha de expiración del reporte'),
    sa.Column('download_count', sa.Integer(), nullable=True, comment='Número de descargas del reporte'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Notas adicionales del reporte'),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True, comment='Fecha de última actualización'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='Fecha de completado'),
    sa.ForeignKeyConstraint(['audit_id'], ['inventory_audits.id'], ),
    sa.ForeignKeyConstraint(['generated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_discrepancy_reports_audit_id'), 'discrepancy_reports', ['audit_id'], unique=False)
    op.create_index(op.f('ix_discrepancy_reports_date_range_end'), 'discrepancy_reports', ['date_range_end'], unique=False)
    op.create_index(op.f('ix_discrepancy_reports_date_range_start'), 'discrepancy_reports', ['date_range_start'], unique=False)
    op.create_index(op.f('ix_discrepancy_reports_generated_by_id'), 'discrepancy_reports', ['generated_by_id'], unique=False)
    op.create_index(op.f('ix_discrepancy_reports_report_type'), 'discrepancy_reports', ['report_type'], unique=False)
    op.create_index(op.f('ix_discrepancy_reports_status'), 'discrepancy_reports', ['status'], unique=False)
    op.create_table('incoming_product_queue',
    sa.Column('product_id', sa.String(length=36), nullable=False, comment='ID del producto en tránsito'),
    sa.Column('vendor_id', sa.String(length=36), nullable=False, comment='Vendor responsable del envío'),
    sa.Column('expected_arrival', sa.DateTime(timezone=True), nullable=True, comment='Fecha esperada de llegada'),
    sa.Column('actual_arrival', sa.DateTime(timezone=True), nullable=True, comment='Fecha real de llegada'),
    sa.Column('verification_status', sa.Enum('PENDING', 'ASSIGNED', 'IN_PROGRESS', 'QUALITY_CHECK', 'APPROVED', 'REJECTED', 'ON_HOLD', 'COMPLETED', name='verificationstatus'), nullable=False, comment='Estado actual en el proceso de verificación'),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'CRITICAL', 'EXPEDITED', name='queuepriority'), nullable=False, comment='Prioridad en la cola de verificación'),
    sa.Column('assigned_to', sa.String(length=36), nullable=True, comment='Usuario asignado para verificación'),
    sa.Column('assigned_at', sa.DateTime(timezone=True), nullable=True, comment='Fecha de asignación'),
    sa.Column('deadline', sa.DateTime(timezone=True), nullable=True, comment='Fecha límite para completar verificación'),
    sa.Column('tracking_number', sa.String(length=100), nullable=True, comment='Número de tracking del envío'),
    sa.Column('carrier', sa.String(length=50), nullable=True, comment='Empresa transportadora'),
    sa.Column('is_delayed', sa.Boolean(), nullable=False, comment='Indica si el producto está retrasado'),
    sa.Column('delay_reason', sa.Enum('TRANSPORT', 'CUSTOMS', 'DOCUMENTATION', 'VENDOR_DELAY', 'QUALITY_ISSUES', 'CAPACITY', 'OTHER', name='delayreason'), nullable=True, comment='Razón del retraso si aplica'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Notas generales sobre el producto'),
    sa.Column('verification_notes', sa.Text(), nullable=True, comment='Notas específicas del proceso de verificación'),
    sa.Column('quality_score', sa.Integer(), nullable=True, comment='Puntuación de calidad (1-10)'),
    sa.Column('quality_issues', sa.Text(), nullable=True, comment='Problemas de calidad identificados'),
    sa.Column('processing_started_at', sa.DateTime(timezone=True), nullable=True, comment='Inicio del procesamiento de verificación'),
    sa.Column('processing_completed_at', sa.DateTime(timezone=True), nullable=True, comment='Finalización del procesamiento'),
    sa.Column('verification_attempts', sa.Integer(), nullable=False, comment='Número de intentos de verificación'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_incoming_product_queue_actual_arrival'), 'incoming_product_queue', ['actual_arrival'], unique=False)
    op.create_index(op.f('ix_incoming_product_queue_assigned_to'), 'incoming_product_queue', ['assigned_to'], unique=False)
    op.create_index(op.f('ix_incoming_product_queue_expected_arrival'), 'incoming_product_queue', ['expected_arrival'], unique=False)
    op.create_index(op.f('ix_incoming_product_queue_id'), 'incoming_product_queue', ['id'], unique=False)
    op.create_index(op.f('ix_incoming_product_queue_priority'), 'incoming_product_queue', ['priority'], unique=False)
    op.create_index(op.f('ix_incoming_product_queue_product_id'), 'incoming_product_queue', ['product_id'], unique=False)
    op.create_index(op.f('ix_incoming_product_queue_vendor_id'), 'incoming_product_queue', ['vendor_id'], unique=False)
    op.create_index(op.f('ix_incoming_product_queue_verification_status'), 'incoming_product_queue', ['verification_status'], unique=False)
    op.create_table('inventory',
    sa.Column('product_id', sa.String(length=36), nullable=False, comment='ID del producto en inventario'),
    sa.Column('status', sa.Enum('DISPONIBLE', 'RESERVADO', 'EN_PICKING', 'DESPACHADO', name='inventorystatus'), nullable=False, comment='Estado del inventario en el proceso de fulfillment'),
    sa.Column('condicion_producto', sa.Enum('NUEVO', 'USADO_EXCELENTE', 'USADO_BUENO', 'USADO_REGULAR', 'DAÑADO', name='condicionproducto'), nullable=False, comment='Condición física del producto en inventario'),
    sa.Column('notas_almacen', sa.Text(), nullable=True, comment='Observaciones y notas del personal de almacén'),
    sa.Column('zona', sa.String(length=10), nullable=False, comment='Zona del almacén (A, B, C, etc.)'),
    sa.Column('estante', sa.String(length=20), nullable=False, comment='Número de estante dentro de la zona'),
    sa.Column('posicion', sa.String(length=20), nullable=False, comment='Posición específica dentro del estante'),
    sa.Column('cantidad', sa.Integer(), nullable=False, comment='Cantidad disponible en esta ubicación'),
    sa.Column('cantidad_reservada', sa.Integer(), nullable=False, comment='Cantidad reservada para órdenes'),
    sa.Column('updated_by_id', sa.String(length=36), nullable=True, comment='ID del usuario que actualizó el inventario'),
    sa.Column('storage_id', sa.String(length=36), nullable=True, comment='FK hacia Storage - ubicación física del inventario'),
    sa.Column('fecha_ingreso', sa.DateTime(), nullable=False, comment='Fecha de ingreso del producto al inventario'),
    sa.Column('fecha_ultimo_movimiento', sa.DateTime(), nullable=False, comment='Fecha del último movimiento de stock'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['storage_id'], ['storages.id'], ),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'zona', 'estante', 'posicion', name='uq_product_location')
    )
    op.create_index(op.f('ix_inventory_estante'), 'inventory', ['estante'], unique=False)
    op.create_index(op.f('ix_inventory_id'), 'inventory', ['id'], unique=False)
    op.create_index('ix_inventory_location', 'inventory', ['zona', 'estante', 'posicion'], unique=False)
    op.create_index(op.f('ix_inventory_product_id'), 'inventory', ['product_id'], unique=False)
    op.create_index('ix_inventory_product_location', 'inventory', ['product_id', 'zona', 'estante'], unique=False)
    op.create_index('ix_inventory_storage_product', 'inventory', ['storage_id', 'product_id'], unique=False)
    op.create_index('ix_inventory_updated_at', 'inventory', ['updated_at'], unique=False)
    op.create_index('ix_inventory_updated_by_product', 'inventory', ['updated_by_id', 'product_id'], unique=False)
    op.create_index('ix_inventory_updated_by_status', 'inventory', ['updated_by_id', 'status'], unique=False)
    op.create_index(op.f('ix_inventory_zona'), 'inventory', ['zona'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.String(length=500), nullable=False),
    sa.Column('product_sku', sa.String(length=100), nullable=False),
    sa.Column('product_image_url', sa.String(length=1000), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.Float(), nullable=False),
    sa.Column('variant_attributes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.create_table('order_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_reference', sa.String(length=100), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'APPROVED', 'DECLINED', 'ERROR', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('payment_method_type', sa.String(length=50), nullable=False),
    sa.Column('payment_method_id', sa.Integer(), nullable=True),
    sa.Column('gateway', sa.String(length=50), nullable=False),
    sa.Column('gateway_transaction_id', sa.String(length=200), nullable=True),
    sa.Column('gateway_reference', sa.String(length=200), nullable=True),
    sa.Column('gateway_response', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failure_reason', sa.Text(), nullable=True),
    sa.Column('failure_code', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['payment_method_id'], ['payment_methods.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_order_transactions_gateway_transaction_id'), 'order_transactions', ['gateway_transaction_id'], unique=False)
    op.create_index(op.f('ix_order_transactions_id'), 'order_transactions', ['id'], unique=False)
    op.create_index(op.f('ix_order_transactions_transaction_reference'), 'order_transactions', ['transaction_reference'], unique=True)
    op.create_table('payment_intents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('intent_reference', sa.String(length=100), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('amount_in_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('customer_email', sa.String(length=320), nullable=False),
    sa.Column('billing_data', sa.JSON(), nullable=True),
    sa.Column('payment_method_types', sa.JSON(), nullable=True),
    sa.Column('redirect_url', sa.String(length=1000), nullable=True),
    sa.Column('wompi_payment_link_id', sa.String(length=200), nullable=True),
    sa.Column('wompi_checkout_url', sa.String(length=1000), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_intents_id'), 'payment_intents', ['id'], unique=False)
    op.create_index(op.f('ix_payment_intents_intent_reference'), 'payment_intents', ['intent_reference'], unique=True)
    op.create_index(op.f('ix_payment_intents_wompi_payment_link_id'), 'payment_intents', ['wompi_payment_link_id'], unique=False)
    op.create_table('payout_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payout_request_id', sa.String(length=36), nullable=False),
    sa.Column('estado_anterior', sa.String(length=50), nullable=True),
    sa.Column('estado_nuevo', sa.String(length=50), nullable=False),
    sa.Column('fecha_cambio', sa.DateTime(), nullable=False),
    sa.Column('observaciones', sa.Text(), nullable=True),
    sa.Column('usuario_responsable', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['payout_request_id'], ['payout_requests.id'], ),
    sa.ForeignKeyConstraint(['usuario_responsable'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payout_history_id'), 'payout_history', ['id'], unique=False)
    op.create_index(op.f('ix_payout_history_payout_request_id'), 'payout_history', ['payout_request_id'], unique=False)
    op.create_table('product_categories',
    sa.Column('product_id', sa.String(length=36), nullable=False, comment='ID del producto'),
    sa.Column('category_id', sa.String(length=36), nullable=False, comment='ID de la categoría'),
    sa.Column('is_primary', sa.Boolean(), nullable=False, comment='Si es la categoría principal del producto'),
    sa.Column('sort_order', sa.Integer(), nullable=False, comment='Orden de la categoría para el producto'),
    sa.Column('assigned_by_id', sa.String(length=36), nullable=True, comment='Usuario que asignó la categoría'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['assigned_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('product_id', 'category_id', name='uq_product_category')
    )
    op.create_index(op.f('ix_product_categories_category_id'), 'product_categories', ['category_id'], unique=False)
    op.create_index(op.f('ix_product_categories_id'), 'product_categories', ['id'], unique=False)
    op.create_index(op.f('ix_product_categories_is_primary'), 'product_categories', ['is_primary'], unique=False)
    op.create_index(op.f('ix_product_categories_product_id'), 'product_categories', ['product_id'], unique=False)
    op.create_index('ix_product_category_category', 'product_categories', ['category_id'], unique=False)
    op.create_index('ix_product_category_category_primary', 'product_categories', ['category_id', 'is_primary'], unique=False)
    op.create_index('ix_product_category_primary', 'product_categories', ['is_primary'], unique=False)
    op.create_index('ix_product_category_product', 'product_categories', ['product_id'], unique=False)
    op.create_index('ix_product_category_product_primary', 'product_categories', ['product_id', 'is_primary'], unique=False)
    op.create_table('product_images',
    sa.Column('product_id', sa.String(length=36), nullable=False, comment='ID del producto asociado'),
    sa.Column('filename', sa.String(length=255), nullable=False, comment='Nombre único del archivo'),
    sa.Column('original_filename', sa.String(length=255), nullable=False, comment='Nombre original del upload'),
    sa.Column('file_path', sa.Text(), nullable=False, comment='Ruta relativa del archivo'),
    sa.Column('file_size', sa.Integer(), nullable=False, comment='Tamaño en bytes'),
    sa.Column('mime_type', sa.String(length=100), nullable=False, comment='Tipo MIME del archivo'),
    sa.Column('width', sa.Integer(), nullable=True, comment='Ancho en píxeles'),
    sa.Column('height', sa.Integer(), nullable=True, comment='Alto en píxeles'),
    sa.Column('order_index', sa.Integer(), nullable=True, comment='Orden de visualización (0 = principal)'),
    sa.Column('resolution', sa.String(length=20), nullable=False, comment='Resolución de la imagen (original, large, medium, thumbnail, small)'),
    sa.Column('is_primary', sa.Boolean(), nullable=True, comment='Indica si es la imagen principal del producto'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación (soft delete)'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_product_image_filename', 'product_images', ['filename'], unique=False)
    op.create_index('ix_product_image_product_order', 'product_images', ['product_id', 'order_index'], unique=False)
    op.create_index('ix_product_image_resolution', 'product_images', ['product_id', 'resolution'], unique=False)
    op.create_index(op.f('ix_product_images_id'), 'product_images', ['id'], unique=False)
    op.create_index(op.f('ix_product_images_product_id'), 'product_images', ['product_id'], unique=False)
    op.create_table('incidentes_inventario',
    sa.Column('inventory_id', sa.String(length=36), nullable=False),
    sa.Column('tipo_incidente', sa.Enum('PERDIDO', 'DAÑADO', name='tipoincidente'), nullable=False),
    sa.Column('estado', sa.Enum('REPORTADO', 'EN_INVESTIGACION', 'RESUELTO', 'CERRADO', name='estadoincidente'), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=False),
    sa.Column('reportado_por', sa.String(), nullable=False),
    sa.Column('fecha_incidente', sa.DateTime(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_incidentes_inventario_id'), 'incidentes_inventario', ['id'], unique=False)
    op.create_table('inventory_audit_items',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('audit_id', sa.String(length=36), nullable=False),
    sa.Column('inventory_id', sa.String(length=36), nullable=False),
    sa.Column('cantidad_sistema', sa.Integer(), nullable=False),
    sa.Column('ubicacion_sistema', sa.String(length=100), nullable=True),
    sa.Column('condicion_sistema', sa.String(length=50), nullable=True),
    sa.Column('cantidad_fisica', sa.Integer(), nullable=True),
    sa.Column('ubicacion_fisica', sa.String(length=100), nullable=True),
    sa.Column('condicion_fisica', sa.String(length=50), nullable=True),
    sa.Column('conteo_completado', sa.Boolean(), nullable=True),
    sa.Column('tiene_discrepancia', sa.Boolean(), nullable=True),
    sa.Column('tipo_discrepancia', sa.Enum('FALTANTE', 'SOBRANTE', 'UBICACION_INCORRECTA', 'CONDICION_DIFERENTE', name='discrepancytype'), nullable=True),
    sa.Column('diferencia_cantidad', sa.Integer(), nullable=True),
    sa.Column('valor_discrepancia', sa.Float(), nullable=True),
    sa.Column('fecha_conteo', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notas_conteo', sa.Text(), nullable=True),
    sa.Column('reconciliado', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['audit_id'], ['inventory_audits.id'], ),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('movimientos_stock',
    sa.Column('inventory_id', sa.String(length=36), nullable=False, comment='ID del item de inventario afectado'),
    sa.Column('tipo_movimiento', sa.Enum('INGRESO', 'SALIDA', 'AJUSTE_POSITIVO', 'AJUSTE_NEGATIVO', 'TRANSFERENCIA', 'DEVOLUCION', 'MERMA', 'RESERVA', 'LIBERACION', name='tipomovimiento'), nullable=False, comment='Tipo de movimiento realizado'),
    sa.Column('cantidad_anterior', sa.Integer(), nullable=False, comment='Cantidad antes del movimiento'),
    sa.Column('cantidad_nueva', sa.Integer(), nullable=False, comment='Cantidad después del movimiento'),
    sa.Column('user_id', sa.String(length=36), nullable=True, comment='Usuario que realizó el movimiento'),
    sa.Column('observaciones', sa.Text(), nullable=True, comment='Observaciones y notas del movimiento'),
    sa.Column('fecha_movimiento', sa.DateTime(), nullable=False, comment='Fecha y hora del movimiento'),
    sa.Column('referencia_externa', sa.String(length=100), nullable=True, comment='Referencia externa (factura, orden, etc.)'),
    sa.Column('lote', sa.String(length=50), nullable=True, comment='Número de lote si aplica'),
    sa.Column('ubicacion_origen', sa.String(length=100), nullable=True, comment='Ubicación origen para transferencias'),
    sa.Column('ubicacion_destino', sa.String(length=100), nullable=True, comment='Ubicación destino para transferencias'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movimientos_stock_fecha_movimiento'), 'movimientos_stock', ['fecha_movimiento'], unique=False)
    op.create_index(op.f('ix_movimientos_stock_id'), 'movimientos_stock', ['id'], unique=False)
    op.create_index(op.f('ix_movimientos_stock_inventory_id'), 'movimientos_stock', ['inventory_id'], unique=False)
    op.create_index(op.f('ix_movimientos_stock_tipo_movimiento'), 'movimientos_stock', ['tipo_movimiento'], unique=False)
    op.create_index(op.f('ix_movimientos_stock_user_id'), 'movimientos_stock', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_reference', sa.String(length=100), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('wompi_transaction_id', sa.String(length=200), nullable=True),
    sa.Column('wompi_payment_id', sa.String(length=200), nullable=True),
    sa.Column('amount_in_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('payment_method_type', sa.String(length=50), nullable=False),
    sa.Column('payment_method', sa.JSON(), nullable=True),
    sa.Column('customer_email', sa.String(length=320), nullable=True),
    sa.Column('customer_data', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('status_message', sa.Text(), nullable=True),
    sa.Column('gateway_response', sa.JSON(), nullable=True),
    sa.Column('gateway_created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('gateway_finalized_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['order_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index(op.f('ix_payments_payment_reference'), 'payments', ['payment_reference'], unique=True)
    op.create_index(op.f('ix_payments_wompi_payment_id'), 'payments', ['wompi_payment_id'], unique=False)
    op.create_index(op.f('ix_payments_wompi_transaction_id'), 'payments', ['wompi_transaction_id'], unique=False)
    op.create_table('transactions',
    sa.Column('monto', sa.DECIMAL(precision=12, scale=2), nullable=False, comment='Monto de la transacción en pesos colombianos (COP)'),
    sa.Column('inventory_id', sa.String(length=36), nullable=True, comment='ID del inventario específico involucrado en la transacción'),
    sa.Column('status', sa.String(length=50), nullable=True, comment='Estado adicional específico del procesador de pagos'),
    sa.Column('fecha_pago', sa.DateTime(), nullable=True, comment='Fecha y hora cuando se realizó el pago efectivo'),
    sa.Column('referencia_pago', sa.String(length=100), nullable=True, comment='Referencia específica del pago (diferente a referencia_externa)'),
    sa.Column('metodo_pago', sa.Enum('EFECTIVO', 'TARJETA_CREDITO', 'TARJETA_DEBITO', 'PSE', 'NEQUI', 'DAVIPLATA', name='metodopago'), nullable=False, comment='Método de pago utilizado en la transacción'),
    sa.Column('estado', sa.Enum('PENDIENTE', 'PROCESANDO', 'COMPLETADA', 'FALLIDA', 'CANCELADA', name='estadotransaccion'), nullable=False, comment='Estado actual de la transacción'),
    sa.Column('transaction_type', sa.Enum('VENTA', 'COMISION', 'DEVOLUCION', 'AJUSTE', name='transactiontype'), nullable=False, comment='Tipo de transacción del marketplace'),
    sa.Column('porcentaje_mestocker', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='Porcentaje de comisión para MeStore (0.00 a 100.00)'),
    sa.Column('monto_vendedor', sa.DECIMAL(precision=12, scale=2), nullable=True, comment='Monto que recibe el vendedor después de comisiones (COP)'),
    sa.Column('comprador_id', sa.String(length=36), nullable=False, comment='ID del usuario comprador'),
    sa.Column('vendedor_id', sa.String(length=36), nullable=True, comment='ID del usuario vendedor (nullable para transacciones del sistema)'),
    sa.Column('product_id', sa.String(length=36), nullable=True, comment='ID del producto involucrado en la transacción'),
    sa.Column('referencia_externa', sa.String(length=100), nullable=True, comment='Referencia externa del procesador de pagos'),
    sa.Column('observaciones', sa.Text(), nullable=True, comment='Observaciones adicionales sobre la transacción'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.CheckConstraint('monto > 0', name='ck_transaction_monto_positive'),
    sa.CheckConstraint('monto_vendedor >= 0', name='ck_transaction_monto_vendedor_positive'),
    sa.CheckConstraint('porcentaje_mestocker >= 0 AND porcentaje_mestocker <= 100', name='ck_transaction_porcentaje_valid'),
    sa.ForeignKeyConstraint(['comprador_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['vendedor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_transaction_comprador_estado', 'transactions', ['comprador_id', 'estado'], unique=False)
    op.create_index('ix_transaction_estado_fecha', 'transactions', ['estado', 'created_at'], unique=False)
    op.create_index('ix_transaction_fecha_pago', 'transactions', ['fecha_pago'], unique=False)
    op.create_index('ix_transaction_product', 'transactions', ['product_id', 'estado'], unique=False)
    op.create_index('ix_transaction_referencia_pago', 'transactions', ['referencia_pago'], unique=False)
    op.create_index('ix_transaction_status_fecha', 'transactions', ['status', 'fecha_pago'], unique=False)
    op.create_index('ix_transaction_vendedor_estado', 'transactions', ['vendedor_id', 'estado'], unique=False)
    op.create_index(op.f('ix_transactions_comprador_id'), 'transactions', ['comprador_id'], unique=False)
    op.create_index(op.f('ix_transactions_fecha_pago'), 'transactions', ['fecha_pago'], unique=False)
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=False)
    op.create_index(op.f('ix_transactions_inventory_id'), 'transactions', ['inventory_id'], unique=False)
    op.create_index(op.f('ix_transactions_product_id'), 'transactions', ['product_id'], unique=False)
    op.create_index(op.f('ix_transactions_referencia_externa'), 'transactions', ['referencia_externa'], unique=False)
    op.create_index(op.f('ix_transactions_referencia_pago'), 'transactions', ['referencia_pago'], unique=False)
    op.create_index(op.f('ix_transactions_status'), 'transactions', ['status'], unique=False)
    op.create_index(op.f('ix_transactions_vendedor_id'), 'transactions', ['vendedor_id'], unique=False)
    op.create_table('webhook_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.String(length=100), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.Enum('TRANSACTION_UPDATED', 'PAYMENT_CREATED', 'PAYMENT_UPDATED', 'PAYMENT_FAILED', 'PAYMENT_APPROVED', 'PAYMENT_DECLINED', 'PAYMENT_VOIDED', 'PAYMENT_REFUNDED', name='webhookeventtype'), nullable=False),
    sa.Column('event_status', sa.Enum('RECEIVED', 'PROCESSING', 'PROCESSED', 'FAILED', 'IGNORED', name='webhookeventstatus'), nullable=False),
    sa.Column('raw_payload', sa.JSON(), nullable=False),
    sa.Column('signature', sa.String(length=500), nullable=True),
    sa.Column('signature_validated', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_attempts', sa.Integer(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('gateway_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['order_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhook_events_event_id'), 'webhook_events', ['event_id'], unique=True)
    op.create_index(op.f('ix_webhook_events_id'), 'webhook_events', ['id'], unique=False)
    op.create_table('commission_disputes',
    sa.Column('transaction_id', sa.String(length=36), nullable=False, comment='ID de la transacción en disputa'),
    sa.Column('usuario_id', sa.String(length=36), nullable=False, comment='ID del usuario que reporta la discrepancia'),
    sa.Column('motivo', sa.String(length=100), nullable=False, comment='Motivo de la disputa (ej: COMISION_INCORRECTA, CALCULO_ERRONEO)'),
    sa.Column('descripcion', sa.Text(), nullable=False, comment='Descripción detallada de la discrepancia reportada'),
    sa.Column('estado', sa.Enum('ABIERTO', 'EN_REVISION', 'RESUELTO', 'RECHAZADO', name='estadodispute'), nullable=False, comment='Estado actual de la disputa'),
    sa.Column('respuesta_admin', sa.Text(), nullable=True, comment='Respuesta del administrador a la disputa'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commission_disputes_estado'), 'commission_disputes', ['estado'], unique=False)
    op.create_index(op.f('ix_commission_disputes_id'), 'commission_disputes', ['id'], unique=False)
    op.create_index(op.f('ix_commission_disputes_transaction_id'), 'commission_disputes', ['transaction_id'], unique=False)
    op.create_index(op.f('ix_commission_disputes_usuario_id'), 'commission_disputes', ['usuario_id'], unique=False)
    op.create_index('ix_dispute_fecha_estado', 'commission_disputes', ['created_at', 'estado'], unique=False)
    op.create_index('ix_dispute_transaction_estado', 'commission_disputes', ['transaction_id', 'estado'], unique=False)
    op.create_index('ix_dispute_usuario_estado', 'commission_disputes', ['usuario_id', 'estado'], unique=False)
    op.create_table('commissions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('commission_number', sa.String(length=50), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.String(length=36), nullable=False),
    sa.Column('transaction_id', sa.String(length=36), nullable=True),
    sa.Column('order_amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('commission_rate', sa.DECIMAL(precision=5, scale=4), nullable=False),
    sa.Column('commission_amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('vendor_amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('platform_amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('commission_type', sa.Enum('STANDARD', 'PREMIUM', 'PROMOTIONAL', 'CATEGORY_BASED', name='commissiontype'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'PAID', 'DISPUTED', 'REFUNDED', 'CANCELLED', name='commissionstatus'), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('calculation_method', sa.String(length=100), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('admin_notes', sa.Text(), nullable=True),
    sa.Column('calculated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('disputed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.CheckConstraint('commission_amount >= 0', name='check_commission_amount_non_negative'),
    sa.CheckConstraint('commission_rate >= 0 AND commission_rate <= 1', name='check_commission_rate_valid'),
    sa.CheckConstraint('order_amount > 0', name='check_order_amount_positive'),
    sa.CheckConstraint('platform_amount >= 0', name='check_platform_amount_non_negative'),
    sa.CheckConstraint('vendor_amount + platform_amount = order_amount', name='check_amounts_balance'),
    sa.CheckConstraint('vendor_amount >= 0', name='check_vendor_amount_non_negative'),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vendor_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_commission_calculation_date', 'commissions', ['calculated_at'], unique=False)
    op.create_index('idx_commission_order_vendor', 'commissions', ['order_id', 'vendor_id'], unique=False)
    op.create_index('idx_commission_vendor_status', 'commissions', ['vendor_id', 'status'], unique=False)
    op.create_index(op.f('ix_commissions_commission_number'), 'commissions', ['commission_number'], unique=True)
    op.create_index(op.f('ix_commissions_id'), 'commissions', ['id'], unique=False)
    op.create_index(op.f('ix_commissions_order_id'), 'commissions', ['order_id'], unique=False)
    op.create_index(op.f('ix_commissions_status'), 'commissions', ['status'], unique=False)
    op.create_index(op.f('ix_commissions_transaction_id'), 'commissions', ['transaction_id'], unique=False)
    op.create_index(op.f('ix_commissions_vendor_id'), 'commissions', ['vendor_id'], unique=False)
    op.create_table('movement_tracker',
    sa.Column('movement_id', sa.String(length=36), nullable=False, comment='ID del movimiento trackeado'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='Usuario que realizó la acción'),
    sa.Column('user_name', sa.String(length=100), nullable=False, comment='Nombre del usuario (snapshot)'),
    sa.Column('action_type', sa.String(length=20), nullable=False, comment='Tipo de acción realizada'),
    sa.Column('previous_data', sa.JSON(), nullable=True, comment='Estado anterior del movimiento (JSON)'),
    sa.Column('new_data', sa.JSON(), nullable=False, comment='Nuevo estado del movimiento (JSON)'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='Dirección IP del usuario'),
    sa.Column('user_agent', sa.Text(), nullable=True, comment='User Agent del navegador'),
    sa.Column('session_id', sa.String(length=100), nullable=True, comment='ID de sesión del usuario'),
    sa.Column('location_from', sa.JSON(), nullable=True, comment='Ubicación origen (JSON)'),
    sa.Column('location_to', sa.JSON(), nullable=True, comment='Ubicación destino (JSON)'),
    sa.Column('batch_id', sa.String(length=36), nullable=True, comment='ID de lote para movimientos agrupados'),
    sa.Column('notes', sa.Text(), nullable=True, comment='Notas adicionales del tracking'),
    sa.Column('action_timestamp', sa.DateTime(), nullable=False, comment='Timestamp específico de la acción'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='ID único del registro'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de creación'),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='Fecha de última actualización'),
    sa.Column('deleted_at', sa.DateTime(), nullable=True, comment='Fecha de eliminación lógica (soft delete)'),
    sa.ForeignKeyConstraint(['movement_id'], ['movimientos_stock.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movement_tracker_action_timestamp'), 'movement_tracker', ['action_timestamp'], unique=False)
    op.create_index(op.f('ix_movement_tracker_action_type'), 'movement_tracker', ['action_type'], unique=False)
    op.create_index(op.f('ix_movement_tracker_batch_id'), 'movement_tracker', ['batch_id'], unique=False)
    op.create_index(op.f('ix_movement_tracker_id'), 'movement_tracker', ['id'], unique=False)
    op.create_index(op.f('ix_movement_tracker_movement_id'), 'movement_tracker', ['movement_id'], unique=False)
    op.create_index(op.f('ix_movement_tracker_session_id'), 'movement_tracker', ['session_id'], unique=False)
    op.create_index(op.f('ix_movement_tracker_user_id'), 'movement_tracker', ['user_id'], unique=False)
    op.create_table('payment_refunds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('refund_reference', sa.String(length=100), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('refund_amount_in_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('wompi_refund_id', sa.String(length=200), nullable=True),
    sa.Column('gateway_response', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('status_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['order_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_refunds_id'), 'payment_refunds', ['id'], unique=False)
    op.create_index(op.f('ix_payment_refunds_refund_reference'), 'payment_refunds', ['refund_reference'], unique=True)
    op.create_index(op.f('ix_payment_refunds_wompi_refund_id'), 'payment_refunds', ['wompi_refund_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payment_refunds_wompi_refund_id'), table_name='payment_refunds')
    op.drop_index(op.f('ix_payment_refunds_refund_reference'), table_name='payment_refunds')
    op.drop_index(op.f('ix_payment_refunds_id'), table_name='payment_refunds')
    op.drop_table('payment_refunds')
    op.drop_index(op.f('ix_movement_tracker_user_id'), table_name='movement_tracker')
    op.drop_index(op.f('ix_movement_tracker_session_id'), table_name='movement_tracker')
    op.drop_index(op.f('ix_movement_tracker_movement_id'), table_name='movement_tracker')
    op.drop_index(op.f('ix_movement_tracker_id'), table_name='movement_tracker')
    op.drop_index(op.f('ix_movement_tracker_batch_id'), table_name='movement_tracker')
    op.drop_index(op.f('ix_movement_tracker_action_type'), table_name='movement_tracker')
    op.drop_index(op.f('ix_movement_tracker_action_timestamp'), table_name='movement_tracker')
    op.drop_table('movement_tracker')
    op.drop_index(op.f('ix_commissions_vendor_id'), table_name='commissions')
    op.drop_index(op.f('ix_commissions_transaction_id'), table_name='commissions')
    op.drop_index(op.f('ix_commissions_status'), table_name='commissions')
    op.drop_index(op.f('ix_commissions_order_id'), table_name='commissions')
    op.drop_index(op.f('ix_commissions_id'), table_name='commissions')
    op.drop_index(op.f('ix_commissions_commission_number'), table_name='commissions')
    op.drop_index('idx_commission_vendor_status', table_name='commissions')
    op.drop_index('idx_commission_order_vendor', table_name='commissions')
    op.drop_index('idx_commission_calculation_date', table_name='commissions')
    op.drop_table('commissions')
    op.drop_index('ix_dispute_usuario_estado', table_name='commission_disputes')
    op.drop_index('ix_dispute_transaction_estado', table_name='commission_disputes')
    op.drop_index('ix_dispute_fecha_estado', table_name='commission_disputes')
    op.drop_index(op.f('ix_commission_disputes_usuario_id'), table_name='commission_disputes')
    op.drop_index(op.f('ix_commission_disputes_transaction_id'), table_name='commission_disputes')
    op.drop_index(op.f('ix_commission_disputes_id'), table_name='commission_disputes')
    op.drop_index(op.f('ix_commission_disputes_estado'), table_name='commission_disputes')
    op.drop_table('commission_disputes')
    op.drop_index(op.f('ix_webhook_events_id'), table_name='webhook_events')
    op.drop_index(op.f('ix_webhook_events_event_id'), table_name='webhook_events')
    op.drop_table('webhook_events')
    op.drop_index(op.f('ix_transactions_vendedor_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_status'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_referencia_pago'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_referencia_externa'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_product_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_inventory_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_fecha_pago'), table_name='transactions')
    op.drop_index(op.f('ix_transactions_comprador_id'), table_name='transactions')
    op.drop_index('ix_transaction_vendedor_estado', table_name='transactions')
    op.drop_index('ix_transaction_status_fecha', table_name='transactions')
    op.drop_index('ix_transaction_referencia_pago', table_name='transactions')
    op.drop_index('ix_transaction_product', table_name='transactions')
    op.drop_index('ix_transaction_fecha_pago', table_name='transactions')
    op.drop_index('ix_transaction_estado_fecha', table_name='transactions')
    op.drop_index('ix_transaction_comprador_estado', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_payments_wompi_transaction_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_wompi_payment_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_reference'), table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_movimientos_stock_user_id'), table_name='movimientos_stock')
    op.drop_index(op.f('ix_movimientos_stock_tipo_movimiento'), table_name='movimientos_stock')
    op.drop_index(op.f('ix_movimientos_stock_inventory_id'), table_name='movimientos_stock')
    op.drop_index(op.f('ix_movimientos_stock_id'), table_name='movimientos_stock')
    op.drop_index(op.f('ix_movimientos_stock_fecha_movimiento'), table_name='movimientos_stock')
    op.drop_table('movimientos_stock')
    op.drop_table('inventory_audit_items')
    op.drop_index(op.f('ix_incidentes_inventario_id'), table_name='incidentes_inventario')
    op.drop_table('incidentes_inventario')
    op.drop_index(op.f('ix_product_images_product_id'), table_name='product_images')
    op.drop_index(op.f('ix_product_images_id'), table_name='product_images')
    op.drop_index('ix_product_image_resolution', table_name='product_images')
    op.drop_index('ix_product_image_product_order', table_name='product_images')
    op.drop_index('ix_product_image_filename', table_name='product_images')
    op.drop_table('product_images')
    op.drop_index('ix_product_category_product_primary', table_name='product_categories')
    op.drop_index('ix_product_category_product', table_name='product_categories')
    op.drop_index('ix_product_category_primary', table_name='product_categories')
    op.drop_index('ix_product_category_category_primary', table_name='product_categories')
    op.drop_index('ix_product_category_category', table_name='product_categories')
    op.drop_index(op.f('ix_product_categories_product_id'), table_name='product_categories')
    op.drop_index(op.f('ix_product_categories_is_primary'), table_name='product_categories')
    op.drop_index(op.f('ix_product_categories_id'), table_name='product_categories')
    op.drop_index(op.f('ix_product_categories_category_id'), table_name='product_categories')
    op.drop_table('product_categories')
    op.drop_index(op.f('ix_payout_history_payout_request_id'), table_name='payout_history')
    op.drop_index(op.f('ix_payout_history_id'), table_name='payout_history')
    op.drop_table('payout_history')
    op.drop_index(op.f('ix_payment_intents_wompi_payment_link_id'), table_name='payment_intents')
    op.drop_index(op.f('ix_payment_intents_intent_reference'), table_name='payment_intents')
    op.drop_index(op.f('ix_payment_intents_id'), table_name='payment_intents')
    op.drop_table('payment_intents')
    op.drop_index(op.f('ix_order_transactions_transaction_reference'), table_name='order_transactions')
    op.drop_index(op.f('ix_order_transactions_id'), table_name='order_transactions')
    op.drop_index(op.f('ix_order_transactions_gateway_transaction_id'), table_name='order_transactions')
    op.drop_table('order_transactions')
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_inventory_zona'), table_name='inventory')
    op.drop_index('ix_inventory_updated_by_status', table_name='inventory')
    op.drop_index('ix_inventory_updated_by_product', table_name='inventory')
    op.drop_index('ix_inventory_updated_at', table_name='inventory')
    op.drop_index('ix_inventory_storage_product', table_name='inventory')
    op.drop_index('ix_inventory_product_location', table_name='inventory')
    op.drop_index(op.f('ix_inventory_product_id'), table_name='inventory')
    op.drop_index('ix_inventory_location', table_name='inventory')
    op.drop_index(op.f('ix_inventory_id'), table_name='inventory')
    op.drop_index(op.f('ix_inventory_estante'), table_name='inventory')
    op.drop_table('inventory')
    op.drop_index(op.f('ix_incoming_product_queue_verification_status'), table_name='incoming_product_queue')
    op.drop_index(op.f('ix_incoming_product_queue_vendor_id'), table_name='incoming_product_queue')
    op.drop_index(op.f('ix_incoming_product_queue_product_id'), table_name='incoming_product_queue')
    op.drop_index(op.f('ix_incoming_product_queue_priority'), table_name='incoming_product_queue')
    op.drop_index(op.f('ix_incoming_product_queue_id'), table_name='incoming_product_queue')
    op.drop_index(op.f('ix_incoming_product_queue_expected_arrival'), table_name='incoming_product_queue')
    op.drop_index(op.f('ix_incoming_product_queue_assigned_to'), table_name='incoming_product_queue')
    op.drop_index(op.f('ix_incoming_product_queue_actual_arrival'), table_name='incoming_product_queue')
    op.drop_table('incoming_product_queue')
    op.drop_index(op.f('ix_discrepancy_reports_status'), table_name='discrepancy_reports')
    op.drop_index(op.f('ix_discrepancy_reports_report_type'), table_name='discrepancy_reports')
    op.drop_index(op.f('ix_discrepancy_reports_generated_by_id'), table_name='discrepancy_reports')
    op.drop_index(op.f('ix_discrepancy_reports_date_range_start'), table_name='discrepancy_reports')
    op.drop_index(op.f('ix_discrepancy_reports_date_range_end'), table_name='discrepancy_reports')
    op.drop_index(op.f('ix_discrepancy_reports_audit_id'), table_name='discrepancy_reports')
    op.drop_table('discrepancy_reports')
    op.drop_index(op.f('ix_vendor_notes_vendor_id'), table_name='vendor_notes')
    op.drop_index('ix_vendor_notes_vendor_created', table_name='vendor_notes')
    op.drop_index(op.f('ix_vendor_notes_id'), table_name='vendor_notes')
    op.drop_index(op.f('ix_vendor_notes_admin_id'), table_name='vendor_notes')
    op.drop_index('ix_vendor_notes_admin_created', table_name='vendor_notes')
    op.drop_table('vendor_notes')
    op.drop_index(op.f('ix_vendor_documents_id'), table_name='vendor_documents')
    op.drop_table('vendor_documents')
    op.drop_index('ix_vendor_audit_vendor_created', table_name='vendor_audit_logs')
    op.drop_index(op.f('ix_vendor_audit_logs_vendor_id'), table_name='vendor_audit_logs')
    op.drop_index(op.f('ix_vendor_audit_logs_id'), table_name='vendor_audit_logs')
    op.drop_index(op.f('ix_vendor_audit_logs_admin_id'), table_name='vendor_audit_logs')
    op.drop_index(op.f('ix_vendor_audit_logs_action_type'), table_name='vendor_audit_logs')
    op.drop_index('ix_vendor_audit_admin_created', table_name='vendor_audit_logs')
    op.drop_index('ix_vendor_audit_action_created', table_name='vendor_audit_logs')
    op.drop_table('vendor_audit_logs')
    op.drop_index(op.f('ix_storages_vendedor_id'), table_name='storages')
    op.drop_index(op.f('ix_storages_tipo'), table_name='storages')
    op.drop_index(op.f('ix_storages_id'), table_name='storages')
    op.drop_index('ix_storage_vendedor_tipo', table_name='storages')
    op.drop_index('ix_storage_vendedor_created', table_name='storages')
    op.drop_index('ix_storage_tipo_vendedor', table_name='storages')
    op.drop_index('ix_storage_tipo_capacidad', table_name='storages')
    op.drop_table('storages')
    op.drop_index(op.f('ix_products_vendedor_id'), table_name='products')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.drop_index(op.f('ix_products_name'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index(op.f('ix_products_categoria'), table_name='products')
    op.drop_index('ix_product_vendedor_status_created', table_name='products')
    op.drop_index('ix_product_vendedor_status', table_name='products')
    op.drop_index('ix_product_status_created', table_name='products')
    op.drop_index('ix_product_name_sku', table_name='products')
    op.drop_index('ix_product_created_at', table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_payout_requests_id'), table_name='payout_requests')
    op.drop_table('payout_requests')
    op.drop_index(op.f('ix_payment_methods_id'), table_name='payment_methods')
    op.drop_table('payment_methods')
    op.drop_index(op.f('ix_orders_order_number'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_table('orders')
    op.drop_table('inventory_audits')
    op.drop_index('ix_admin_user_permissions_user_active', table_name='admin_user_permissions')
    op.drop_index('ix_admin_user_permissions_granted_at', table_name='admin_user_permissions')
    op.drop_table('admin_user_permissions')
    op.drop_index('ix_admin_activity_logs_user_time', table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_target_id'), table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_target', table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_suspicious', table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_session_id'), table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_session', table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_risk_time', table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_risk_level'), table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_result'), table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_is_suspicious'), table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_ip_time', table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_ip_address'), table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_id'), table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_correlation_id'), table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_correlation', table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_compliance', table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_admin_user_id'), table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_admin_email'), table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_action_type'), table_name='admin_activity_logs')
    op.drop_index('ix_admin_activity_logs_action_result', table_name='admin_activity_logs')
    op.drop_index(op.f('ix_admin_activity_logs_action_name'), table_name='admin_activity_logs')
    op.drop_table('admin_activity_logs')
    op.drop_index(op.f('ix_users_reset_token_expires_at'), table_name='users')
    op.drop_index(op.f('ix_users_reset_token'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_cedula'), table_name='users')
    op.drop_index('ix_user_type_active', table_name='users')
    op.drop_index('ix_user_otp_expires', table_name='users')
    op.drop_index('ix_user_email_verified', table_name='users')
    op.drop_index('ix_user_email_active', table_name='users')
    op.drop_index('ix_user_created_type', table_name='users')
    op.drop_index('ix_user_active_created', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_system_settings_key'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_id'), table_name='system_settings')
    op.drop_index(op.f('ix_system_settings_category'), table_name='system_settings')
    op.drop_index('idx_system_settings_public', table_name='system_settings')
    op.drop_index('idx_system_settings_editable', table_name='system_settings')
    op.drop_index('idx_system_settings_category', table_name='system_settings')
    op.drop_table('system_settings')
    op.drop_index('ix_category_path_level', table_name='categories')
    op.drop_index('ix_category_parent_sort', table_name='categories')
    op.drop_index('ix_category_parent_level', table_name='categories')
    op.drop_index('ix_category_parent_active_sort', table_name='categories')
    op.drop_index('ix_category_name_active', table_name='categories')
    op.drop_index('ix_category_active_status', table_name='categories')
    op.drop_index('ix_category_active_sort', table_name='categories')
    op.drop_index(op.f('ix_categories_status'), table_name='categories')
    op.drop_index(op.f('ix_categories_sort_order'), table_name='categories')
    op.drop_index(op.f('ix_categories_slug'), table_name='categories')
    op.drop_index(op.f('ix_categories_path'), table_name='categories')
    op.drop_index(op.f('ix_categories_parent_id'), table_name='categories')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_level'), table_name='categories')
    op.drop_index(op.f('ix_categories_is_active'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    op.drop_index(op.f('ix_admin_permissions_name'), table_name='admin_permissions')
    op.drop_index(op.f('ix_admin_permissions_id'), table_name='admin_permissions')
    op.drop_index('ix_admin_permission_system_critical', table_name='admin_permissions')
    op.drop_index('ix_admin_permission_scope_clearance', table_name='admin_permissions')
    op.drop_index('ix_admin_permission_resource_action', table_name='admin_permissions')
    op.drop_index('ix_admin_permission_category', table_name='admin_permissions')
    op.drop_table('admin_permissions')
    # ### end Alembic commands ###
