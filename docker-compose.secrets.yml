# Docker Compose with Secrets Management
# This configuration uses Docker secrets for secure credential handling
# Usage: docker-compose -f docker-compose.yml -f docker-compose.secrets.yml up

version: '3.8'

services:
  # ===== BACKEND SERVICE WITH SECRETS =====
  backend:
    secrets:
      - jwt_secret
      - db_password
      - redis_password
      - wompi_private_key
      - twilio_auth_token
      - sendgrid_api_key
      - webhook_secret
    environment:
      # Reference Docker secrets instead of plain text
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - DATABASE_URL=postgresql+asyncpg://mestocker_user:${DB_PASSWORD_FILE}@postgres:5432/mestocker_prod
      - SECRET_KEY_FILE=/run/secrets/jwt_secret
      - REDIS_PASSWORD_FILE=/run/secrets/redis_password
      - WOMPI_PRIVATE_KEY_FILE=/run/secrets/wompi_private_key
      - TWILIO_AUTH_TOKEN_FILE=/run/secrets/twilio_auth_token
      - SENDGRID_API_KEY_FILE=/run/secrets/sendgrid_api_key
      - WOMPI_WEBHOOK_SECRET_FILE=/run/secrets/webhook_secret
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    networks:
      - mestore_secure_network

  # ===== DATABASE WITH SECRETS =====
  postgres:
    image: postgres:15-alpine
    secrets:
      - db_password
      - postgres_password
    environment:
      POSTGRES_DB: mestocker_prod
      POSTGRES_USER: mestocker_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_logs:/var/log/postgresql
    networks:
      - mestore_secure_network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  # ===== REDIS WITH SECRETS =====
  redis:
    image: redis:7-alpine
    secrets:
      - redis_password
    command: >
      sh -c "redis-server
      --appendonly yes
      --requirepass $$(cat /run/secrets/redis_password)
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru"
    volumes:
      - redis_data:/data
    networks:
      - mestore_secure_network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'

  # ===== NGINX WITH SSL CERTIFICATES =====
  nginx:
    image: nginx:stable-alpine
    secrets:
      - ssl_certificate
      - ssl_private_key
      - nginx_htpasswd
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    networks:
      - mestore_secure_network
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.1'

# ===== DOCKER SECRETS DEFINITION =====
secrets:
  jwt_secret:
    external: true
    name: mestore_jwt_secret_v1

  db_password:
    external: true
    name: mestore_db_password_v1

  postgres_password:
    external: true
    name: mestore_postgres_password_v1

  redis_password:
    external: true
    name: mestore_redis_password_v1

  wompi_private_key:
    external: true
    name: mestore_wompi_private_key_v1

  twilio_auth_token:
    external: true
    name: mestore_twilio_auth_token_v1

  sendgrid_api_key:
    external: true
    name: mestore_sendgrid_api_key_v1

  webhook_secret:
    external: true
    name: mestore_webhook_secret_v1

  ssl_certificate:
    external: true
    name: mestore_ssl_certificate_v1

  ssl_private_key:
    external: true
    name: mestore_ssl_private_key_v1

  nginx_htpasswd:
    external: true
    name: mestore_nginx_htpasswd_v1

# ===== SECURE VOLUMES =====
volumes:
  postgres_data:
    driver: local
    name: mestore_postgres_data_prod
    driver_opts:
      type: none
      o: bind
      device: /var/lib/mestore/postgres

  redis_data:
    driver: local
    name: mestore_redis_data_prod
    driver_opts:
      type: none
      o: bind
      device: /var/lib/mestore/redis

  app_logs:
    driver: local
    name: mestore_app_logs_prod
    driver_opts:
      type: none
      o: bind
      device: /var/log/mestore

  app_uploads:
    driver: local
    name: mestore_uploads_prod
    driver_opts:
      type: none
      o: bind
      device: /var/uploads/mestore

  nginx_logs:
    driver: local
    name: mestore_nginx_logs_prod
    driver_opts:
      type: none
      o: bind
      device: /var/log/nginx/mestore

  postgres_logs:
    driver: local
    name: mestore_postgres_logs_prod
    driver_opts:
      type: none
      o: bind
      device: /var/log/postgresql/mestore

# ===== SECURE NETWORK =====
networks:
  mestore_secure_network:
    driver: bridge
    name: mestore_secure_network
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: mestore_br
      com.docker.network.driver.mtu: 1500