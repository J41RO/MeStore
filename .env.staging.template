# ~/.env.staging.template
# ---------------------------------------------------------------------------------------------
# MESTORE - Staging Environment Configuration Template
# Copyright (c) 2025 Jairo. Todos los derechos reservados.
# Licensed under the proprietary license detailed in a LICENSE file in the root of this project.
# ---------------------------------------------------------------------------------------------
#
# Nombre del Archivo: .env.staging.template
# Ruta: ~/.env.staging.template
# Autor: DevOps Integration AI
# Fecha de Creación: 2025-09-17
# Última Actualización: 2025-09-17
# Versión: 1.0.0
# Propósito: Template de variables de entorno para staging
#            Configuración intermedia con debug y testing habilitado
#
# Modificaciones:
# 2025-09-17 - Template inicial para staging
#
# INSTRUCCIONES:
# 1. Copiar este archivo a .env.staging
# 2. Rellenar las variables con valores de staging
# 3. Mantener debug habilitado para troubleshooting
# 4. Usar datos de prueba seguros
#
# ---------------------------------------------------------------------------------------------

# ===== APLICACIÓN =====
ENVIRONMENT=staging
DEBUG=true
TESTING=false

# ===== SEGURIDAD =====
# Usar claves diferentes a producción pero seguras
SECRET_KEY=staging_secret_key_change_me_secure
JWT_SECRET_KEY=staging_jwt_secret_key_change_me
JWT_ALGORITHM=HS256
JWT_EXPIRE_MINUTES=60  # Más tiempo para testing

# ===== BASE DE DATOS =====
DATABASE_URL=postgresql+asyncpg://mestore_staging_user:staging_db_password@postgres:5432/mestore_staging
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=mestore_staging
POSTGRES_USER=mestore_staging_user
POSTGRES_PASSWORD=staging_db_password_secure

# ===== REDIS =====
REDIS_URL=redis://:staging_redis_password@redis:6379/1
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=staging_redis_password_secure
REDIS_DB=1  # Diferente de producción

# ===== SERVIDOR WEB =====
UVICORN_HOST=0.0.0.0
UVICORN_PORT=8000
UVICORN_WORKERS=2  # Menos workers para staging
UVICORN_LOG_LEVEL=debug
UVICORN_LOOP=asyncio  # Default loop para debugging
UVICORN_HTTP=h11  # Default HTTP para debugging
UVICORN_ACCESS_LOG=true

# ===== PUERTOS DE SERVICIOS =====
BACKEND_PORT=8001
FRONTEND_PORT=8081
HTTP_PORT=8080
HTTPS_PORT=8443
POSTGRES_PORT=5433
REDIS_PORT=6380

# ===== MONITORING =====
PROMETHEUS_PORT=9091
GRAFANA_PORT=3001
GRAFANA_PASSWORD=staging_grafana_password

# ===== LOGGING =====
LOG_LEVEL=debug
LOG_FORMAT=detailed
LOG_FILE=/home/appuser/app/logs/staging.log
ACCESS_LOG_FILE=/home/appuser/app/logs/staging_access.log
ERROR_LOG_FILE=/home/appuser/app/logs/staging_error.log

# ===== CORS Y SECURITY =====
ALLOWED_HOSTS=staging.mestore.com,localhost,127.0.0.1
CORS_ORIGINS=https://staging.mestore.com,http://localhost:8081,http://127.0.0.1:8081
CORS_ALLOW_CREDENTIALS=true

# ===== BACKUP Y RECOVERY =====
BACKUP_RETENTION_DAYS=7  # Menos retención para staging
BACKUP_SCHEDULE="0 3 * * *"  # Daily at 3 AM
BACKUP_S3_BUCKET=mestore-backups-staging
BACKUP_S3_REGION=us-east-1

# ===== RATE LIMITING =====
RATE_LIMIT_ENABLED=true
RATE_LIMIT_PER_MINUTE=200  # Más permisivo para testing
RATE_LIMIT_BURST=400

# ===== SECURITY HEADERS =====
SECURITY_HEADERS_ENABLED=true
HSTS_MAX_AGE=3600  # Menos tiempo para staging
CSP_ENABLED=false  # Deshabilitado para debugging

# ===== EMAIL (PARA NOTIFICACIONES) =====
SMTP_HOST=smtp.mailtrap.io  # Servicio de testing
SMTP_PORT=2525
SMTP_USER=staging_smtp_user
SMTP_PASSWORD=staging_smtp_password
SMTP_TLS=true

# ===== PAYMENTS (WOMPI) =====
WOMPI_ENVIRONMENT=test
WOMPI_PUBLIC_KEY=pub_test_WOMPI_PUBLIC_KEY_HERE
WOMPI_PRIVATE_KEY=prv_test_WOMPI_PRIVATE_KEY_HERE
WOMPI_WEBHOOK_SECRET=WOMPI_TEST_WEBHOOK_SECRET

# ===== EXTERNAL SERVICES =====
# SSL Certificates (self-signed para staging)
SSL_CERT_PATH=/etc/nginx/ssl/staging.crt
SSL_KEY_PATH=/etc/nginx/ssl/staging.key

# CDN Configuration
CDN_URL=https://staging-cdn.mestore.com
STATIC_URL=https://staging-static.mestore.com

# ===== MIGRACIONES =====
RUN_MIGRATIONS=true
ALEMBIC_CONFIG=alembic.ini

# ===== HEALTH CHECKS =====
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# ===== PERFORMANCE =====
# Database connection pool (menor para staging)
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=15
DB_POOL_TIMEOUT=30

# Redis connection pool
REDIS_POOL_SIZE=5
REDIS_MAX_CONNECTIONS=10

# ===== ALERTING =====
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/STAGING/SLACK/WEBHOOK
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/STAGING/DISCORD/WEBHOOK

# ===== METRICS Y OBSERVABILITY =====
METRICS_ENABLED=true
TRACING_ENABLED=true
JAEGER_ENDPOINT=http://jaeger:14268/api/traces

# ===== FEATURE FLAGS =====
FEATURE_SEARCH_ENABLED=true
FEATURE_COMMISSION_SYSTEM_ENABLED=true
FEATURE_ADMIN_PORTAL_ENABLED=true
FEATURE_VENDOR_DASHBOARD_ENABLED=true

# ===== CUSTOM APPLICATION SETTINGS =====
# Maximum file upload size (MB)
MAX_UPLOAD_SIZE=5  # Menor para staging

# QR Code settings
QR_CODE_SIZE=200
QR_CODE_FORMAT=PNG

# Commission settings
DEFAULT_COMMISSION_RATE=0.10  # 10% para testing
COMMISSION_PAYMENT_SCHEDULE=weekly  # Más frecuente para testing

# ===== INFRASTRUCTURE =====
# Container resource limits (menores para staging)
CONTAINER_MEMORY_LIMIT=512M
CONTAINER_CPU_LIMIT=0.3

# Network settings
NETWORK_SUBNET=172.21.0.0/16

# ===== DATOS DE EJEMPLO HABILITADOS EN STAGING =====
LOAD_SAMPLE_DATA=true
CREATE_SAMPLE_USERS=true

# ===== DEVELOPMENT/DEBUG HABILITADO =====
RELOAD=false  # Controlado por docker-compose
AUTO_RELOAD=false
DEV_MODE=true

# ===== TESTING ESPECÍFICO DE STAGING =====
STAGING_SPECIFIC_FEATURE=true
EXTENDED_LOGGING=true
PERFORMANCE_MONITORING=true
ERROR_TRACKING_VERBOSE=true

# ===== DATABASE SEEDS =====
SEED_DATABASE=true
SEED_ADMIN_USER=true
SEED_VENDOR_USERS=true
SEED_BUYER_USERS=true
SEED_PRODUCTS=true
SEED_ORDERS=true

# ===== TESTING INTEGRATIONS =====
ENABLE_TEST_ENDPOINTS=true
MOCK_EXTERNAL_SERVICES=true
DISABLE_EMAIL_SENDING=false  # Usar mailtrap
DISABLE_SMS_SENDING=true