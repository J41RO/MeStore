# Multi-environment configuration for development, testing, and production

[alembic]
sqlalchemy.url = sqlite:///./mestore_production.db
# path to migration scripts.
script_location = %(here)s/alembic
revision_environment = true

# template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
file_template = %%(year)d_%%(month).2d_%%(day).2d_%%(hour).2d%%(minute).2d-%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
prepend_sys_path = .

# timezone for migrations
timezone = UTC

# output encoding used when revision files are written from script.py.mako
output_encoding = utf-8

# Environment-specific configurations
# Use with: alembic -x environment=development|testing|production <command>

[alembic:development]
# Development environment configuration
sqlalchemy.echo = true
sqlalchemy.echo_pool = false
sqlalchemy.pool_pre_ping = true
sqlalchemy.pool_recycle = 300

[alembic:testing]
# Testing environment configuration
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_pre_ping = true
sqlalchemy.pool_recycle = 300
sqlalchemy.poolclass = NullPool

[alembic:production]
# Production environment configuration
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_pre_ping = true
sqlalchemy.pool_recycle = 3600
sqlalchemy.poolclass = QueuePool
sqlalchemy.pool_size = 10
sqlalchemy.max_overflow = 20

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
